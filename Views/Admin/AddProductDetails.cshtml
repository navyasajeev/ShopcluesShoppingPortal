@model ShopcluesShoppingPortal.Models.ProductDetail

@{
    ViewBag.Title = "AddProductDetails";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Add product details</h2>

@using (Html.BeginForm("AddProductDetails", "Admin", FormMethod.Post, new { enctype = "multipart/form-data", id = "productForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group m-2">
            @Html.LabelFor(model => model.ProductName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger field-validation-valid" data-valmsg-for="ProductName" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group m-2">
            @Html.LabelFor(model => model.CategoryName, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CategoryName,
                                      (IEnumerable<SelectListItem>)ViewBag.Categories,
                                      "-----  Select category  -----",
                                      htmlAttributes: new { @class = "form-control" })
                <span class="text-danger field-validation-valid" data-valmsg-for="CategoryName" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group m-2">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger field-validation-valid" data-valmsg-for="Description" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group m-2">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger field-validation-valid" data-valmsg-for="Stock" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group m-2">
            @Html.LabelFor(model => model.CreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger field-validation-valid" data-valmsg-for="CreatedDate" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group m-2">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                <span class="text-danger field-validation-valid" data-valmsg-for="Price" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group m-2">
            @Html.LabelFor(model => model.ProductImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="file" />
                <span class="text-danger field-validation-valid" data-valmsg-for="ProductImage" data-valmsg-replace="true"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10 p-4 mx-5">
                <input type="submit" value="Add product" class="btn btn-primary" id="submitBtn" />
            </div>
        </div>

        @Html.ViewData["Message"]
    </div>
}

<div>
    @Html.ActionLink("Back to List", "GetAllProductDetails")
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Function to validate individual fields
            function validateField(field, errorMessage) {
                var value = field.val().trim();
                if (value === '') {
                    field.next('.text-danger').text(errorMessage);
                    return false;
                } else {
                    field.next('.text-danger').text('');
                    return true;
                }
            }

            // Validate fields on form submit
            $('#submitBtn').click(function (event) {
                var isValid = true;

                isValid = validateField($('#ProductName'), 'Product Name is required.') && isValid;
                isValid = validateField($('#CategoryName'), 'Category is required.') && isValid;
                isValid = validateField($('#Description'), 'Description is required.') && isValid;
                isValid = validateField($('#Stock'), 'Stock is required.') && isValid;
                isValid = validateField($('#CreatedDate'), 'Created Date is required.') && isValid;
                isValid = validateField($('#Price'), 'Price is required.') && isValid;
                isValid = validateField($('#ProductImage'), 'Product Image is required.') && isValid;

                // Prevent form submission if there are validation errors
                if (!isValid) {
                    event.preventDefault();
                }
            });

            // Validate fields on blur (when focus is lost)
            $('#ProductName').blur(function () {
                validateField($(this), 'Product Name is required.');
            });

            $('#CategoryName').change(function () {
                validateField($(this), 'Category is required.');
            });

            $('#Description').blur(function () {
                validateField($(this), 'Description is required.');
            });

            $('#Stock').blur(function () {
                validateField($(this), 'Stock is required.');
            });

            $('#CreatedDate').blur(function () {
                validateField($(this), 'Created Date is required.');
            });

            $('#Price').blur(function () {
                validateField($(this), 'Price is required.');
            });

            $('#ProductImage').blur(function () {
                validateField($(this), 'Product Image is required.');
            });
        });
    </script>
}

